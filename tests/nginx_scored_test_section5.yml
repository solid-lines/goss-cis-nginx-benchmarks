---
# CIS NGINX Benchmark v1.0.0
#
# 5 Request Filtering and Restrictions
# 5.2 Request Limits
  # 5.2.1 Ensure timeout values for reading the client header and body are set correctly (Scored)
  client_body_timeout:
    title: 5.2.1 Ensure timeout values for reading the client header and body are set correctly (Scored)
    meta:
      webserver: 1
      proxy: 1
      loadbalancer: 1
      CIS_ID: 5.2.1
      Remediation: Find the HTTP or server block of your nginx configuration and add the client_body_timeout directive set to the configuration. The below example sets the timeouts to 10 seconds.
    exit-status: 0
    exec: grep -ir client_body_timeout /etc/nginx | grep '10;'
  client_header_timeout:
    title: 5.2.1 Ensure timeout values for reading the client header and body are set correctly (Scored)
    meta:
      webserver: 1
      proxy: 1
      loadbalancer: 1
      CIS_ID: 5.2.1
      Remediation: Find the HTTP or server block of your nginx configuration and add the client_header_timeout directive set to the configuration. The below example sets the timeouts to 10 seconds.
    exit-status: 0
    exec: grep -ir client_header_timeout /etc/nginx | grep '10;'

  # 5.2.2 Ensure the maximum request body size is set correctly (Scored)
  client_body_timeout:
    title: 5.2.2 Ensure the maximum request body size is set correctly (Scored)
    meta:
      webserver: 1
      proxy: 1
      loadbalancer: 1
      CIS_ID: 5.2.2
      Remediation: Find the HTTP or server block of your nginx configuration and add the client_max_body_size set to 100K in this block.
    exit-status: 0
    exec: grep -ir client_max_body_size /etc/nginx | grep '100K;'

  # 5.2.3 Ensure the maximum buffer size for URIs is defined (Scored)
  large_client_header_buffers:
    title: 5.2.3 Ensure the maximum buffer size for URIs is defined (Scored)
    meta:
      webserver: 1
      proxy: 1
      loadbalancer: 1
      CIS_ID: 5.2.3
      Remediation: Open your nginx.conf file and locate your server or HTTP blocks. This may be added to the HTTP block for all configurations or the server block for more specific configurations to meet your needs -> large_client_header_buffers 2 1k
    exit-status: 0
    exec: grep -ir 'large_client_header_buffers 2 1k' /etc/nginx/ | grep '100K;'

# 5.3 Browser Security
  # 5.3.1 Ensure X-Frame-Options header is configured and enabled (Scored)
  X-Frame-Options:
    title: 5.3.1 Ensure X-Frame-Options header is configured and enabled (Scored)
    meta:
      webserver: 1
      CIS_ID: 5.3.1
      Remediation: Add the line to your server blocks in your nginx configuration. The policy should be configured to meet your organization's needs -> add_header X-Frame-Options "SAMEORIGIN";
    exit-status: 0
    exec: grep -ir X-Frame-Options /etc/nginx | grep 'SAMEORIGIN'

  # 5.3.2 Ensure X-Content-Type-Options header is configured and enabled (Scored)
  X-Content-Type-Options:
    title: 5.3.2 Ensure X-Content-Type-Options header is configured and enabled (Scored)
    meta:
      webserver: 1
      CIS_ID: 5.3.2
      Remediation: Open the nginx configuration file that contains your server blocks. Add the following line into your server block to add X-Content-Type-Options header and direct your user agent to not sniff content types -> add_header X-Content-Type-Options "nosniff";
    exit-status: 0
    exec: grep -ir X-Content-Type-Options /etc/nginx | grep 'noosniff'

  # 5.3.3 Ensure the X-XSS-Protection Header is enabled and configured properly (Scored)
  X-XSS-Protection:
    title: 5.3.3 Ensure the X-XSS-Protection Header is enabled and configured properly (Scored)
    meta:
      webserver: 1
      CIS_ID: 5.3.3
      Remediation: Open your nginx configuration file that contains your server blocks. Add the below line into your server block to add Content-Security-Policy and direct your user agent to block reflected cross-site scripting -> add_header X-Xss-Protection "1; mode=block";
    exit-status: 0
    exec: grep -ir 'X-Xss-Protection' /etc/nginx | grep '1; mode=block'