---
# CIS NGINX Benchmark v1.0.0
#
# 2 Basic Configuration
# 2.1 Minimize NGINX Modules

command:
  # 2.1.2 Ensure HTTP WebDAV module is not installed (Scored)
  http_dav_module:
    title: 2.1.2 Ensure HTTP WebDAV module is not installed (Scored)
    meta:
      webserver: 2
      proxy: 2
      loadbalancer: 2
      CIS_ID: 2.1.2
      Remediation: To remove the http_dav_module, recompile nginx from source without the --with-http_dav_module flag.
    exit-status: 1
    exec: nginx -V 2>&1 | grep 'http_dav_module'

  # 2.1.3 Ensure modules with gzip functionality are disabled (Scored)
  http_gzip_module:
    title: 2.1.3 Ensure modules with gzip functionality are disabled (Scored)
    meta:
      webserver: 2
      proxy: 2
      loadbalancer: 2
      CIS_ID: 2.1.3
      Remediation: In order to disable the http_gzip_module, nginx must be recompiled from source. This can be accomplished using the below command in the folder you used during your original compilation. This must be done without the --with-http_gzip_static_module configuration directive.
    exit-status: 0
    exec: nginx -V 2>&1 | grep 'http_gzip_module\|http_gzip_static_module'

  # 2.1.4 Ensure the autoindex module is disabled (Scored)
  autoindex:
    title: 2.1.4 Ensure the autoindex module is disabled (Scored)
    meta:
      webserver: 1
      CIS_ID: 2.1.4
      Remediation: Set the value for all autoindex directives to off, or remove those directives.
    exit-status: 1
    exec: egrep -i '^\s*autoindex\s+' /etc/nginx/nginx.conf
  autoindex:
    title: 2.1.4 Ensure the autoindex module is disabled (Scored)
    meta:
      webserver: 1
      CIS_ID: 2.1.4
      Remediation: Set the value for all autoindex directives to off, or remove those directives.
    exit-status:
      or:
      - 1
      - 2
    exec: egrep -i '^\s*autoindex\s+' /etc/nginx/conf.d/*

  # 2.2.2 Ensure the NGINX service account is locked (Scored)
  password_locked:
    title: 2.2.2 Ensure the NGINX service account is locked (Scored)
    meta:
      webserver: 1
      proxy: 1
      loadbalancer: 1
      CIS_ID: 2.2.2
      Remediation: Use the passwd command to lock the nginx service account -> passwd -l <nginx_user>
    exit-status: 0
    exec: bash ./scripts/2.2.2.sh

  # 2.2.3 Ensure the NGINX service account has an invalid shell (Scored)
  invalid_shell:
    title: 2.2.3 Ensure the NGINX service account has an invalid shell (Scored)
    meta:
      webserver: 1
      proxy: 1
      loadbalancer: 1
      CIS_ID: 2.2.3
      Remediation: Change the login shell for the nginx account to /sbin/nologin by using the following command -> chsh -s /sbin/nologin nginx
    exit-status: 0
    exec: USER=$(grep "^user[^;]*;" /etc/nginx/nginx.conf | awk '{print $2}' | sed 's/;//g'); grep $USER /etc/passwd | grep 'nologin\|false'

# 2.3 Permissions and Ownership
  # 2.3.1 Ensure NGINX directories and files are owned by root (Scored)
  owned_by_root:
    title: 2.3.1 Ensure NGINX directories and files are owned by root (Scored)
    meta:
      webserver: 1
      proxy: 1
      loadbalancer: 1
      CIS_ID: 2.3.1
      Remediation: Run the following command to ensure ownership and group ownership is set to root -> chown -R root:root /etc/nginx
    exit-status: 0
    exec: stat /etc/nginx | grep root | grep 075

  # 2.3.2 Ensure access to NGINX directories and files is restricted (Scored)
  access_restricted:
    title: 2.3.2 Ensure access to NGINX directories is restricted (Scored)
    meta:
      webserver: 1
      proxy: 1
      loadbalancer: 1
      CIS_ID: 2.3.2
      Remediation: To set permissions to least privilege on the nginx configuration files, issue these command -> find /etc/nginx -type d | xargs chmod 750
    exit-status: 1
    exec: find /etc/nginx -type d | xargs ls -ld | grep 'root root' | grep -v 'drwxr\-x'
  access_restricted:
    title: 2.3.2 Ensure access to NGINX files is restricted (Scored)
    meta:
      webserver: 1
      proxy: 1
      loadbalancer: 1
      CIS_ID: 2.3.2
      Remediation: To set permissions to least privilege on the nginx configuration files, issue these command -> find /etc/nginx -type f | xargs chmod 640
    exit-status: 1
    exec: find /etc/nginx -type f | xargs ls -l | grep 'root root' | grep -v '\-rw\-r\-\-'

  # 2.3.3 Ensure the NGINX process ID (PID) file is secured (Scored)
  pid_secured:
    title: 2.3.3 Ensure the NGINX process ID (PID) file is secured (Scored)
    meta:
      webserver: 1
      proxy: 1
      loadbalancer: 1
      CIS_ID: 2.3.3
      Remediation: If the PID file is not owned by root, issue this command -> chown root:root /var/run/nginx.pid   If the PID file has permissions greater than 644, issue this command -> chown 644 /var/run/nginx.pid
    exit-status: 0
    exec: ls -l /var/run/nginx.pid | grep 'root root'

# 2.4 Network Configuration
  # 2.4.3 Ensure keepalive_timeout is 10 seconds or less, but not 0 (Scored)
  keepalive_timeout:
    title: 2.4.3 Ensure keepalive_timeout is 10 seconds or less, but not 0 (Scored)
    meta:
      webserver: 1
      proxy: 1
      loadbalancer: 1
      CIS_ID: 2.4.3
      Remediation: Find the HTTP or server block of your nginx configuration, and add the keepalive_timeout directive. Set it to 10 seconds or less, but not 0.
    exit-status: 0
    exec: bash ./scripts/2.4.3.sh

  # 2.4.4 Ensure send_timeout is set to 10 seconds or less, but not 0 (Scored)
  send_timeout:
    title: 2.4.4 Ensure send_timeout is set to 10 seconds or less, but not 0 (Scored)
    meta:
      webserver: 1
      proxy: 1
      loadbalancer: 1
      CIS_ID: 2.4.4
      Remediation: Find the HTTP or server block of your nginx configuration, and add the send_timeout directive. Set it to 10 seconds or less, but not 0.
    exit-status: 0
    exec: bash ./scripts/2.4.4.sh

# 2.5 Information Disclosure
  # 2.5.1 Ensure server_tokens directive is set to `off` (Scored)
  server_tokens:
    title: 2.5.1 Ensure server_tokens directive is set to `off` (Scored)
    meta:
      webserver: 1
      CIS_ID: 2.5.1
      Remediation: To disable the server_tokens directive, set it to off inside a server block in your nginx.conf.
    exit-status: 0
    exec: grep -ri '^server_tokens' /etc/nginx | grep 'off;'

  # 2.5.2 Ensure default error and index.html pages do not reference NGINX
  reference_nginx:
    title: 2.5.2 Ensure default error and index.html pages do not reference NGINX
    meta:
      webserver: 1
      proxy: 1
      loadbalancer: 1
      CIS_ID: 2.5.2
      Remediation: Edit /usr/share/nginx/html/index.html and usr/share/nginx/html/50x.html and remove any lines that reference NGINX.
    exit-status: 1
    exec: grep -i nginx /usr/share/nginx/html/index.html
  reference_nginx:
    title: 2.5.2 Ensure default error and index.html pages do not reference NGINX
    meta:
      webserver: 1
      proxy: 1
      loadbalancer: 1
      CIS_ID: 2.5.2
      Remediation: Edit /usr/share/nginx/html/index.html and usr/share/nginx/html/50x.html and remove any lines that reference NGINX.
    exit-status: 1
    exec: grep -i nginx /usr/share/nginx/html/50x.html

  # 2.5.4 Ensure the NGINX reverse proxy does not enable information disclosure (Scored)
  ## TODO

